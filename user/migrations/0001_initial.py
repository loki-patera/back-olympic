# Generated by Django 5.2 on 2025-04-25 08:52

import django.db.models.deletion
import user.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id_person",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("firstname", models.CharField(max_length=50, verbose_name="Prénom")),
                (
                    "lastname",
                    models.CharField(max_length=50, verbose_name="Nom de famille"),
                ),
                ("date_of_birth", models.DateField(verbose_name="Date de naissance")),
                ("country", models.CharField(max_length=75, verbose_name="Pays")),
            ],
            options={
                "verbose_name": "Personne",
                "verbose_name_plural": "Personnes",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "person_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="user.person",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "email",
                    models.EmailField(
                        max_length=100, unique=True, verbose_name="Email"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="Membre du staff"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False, verbose_name="Super utilisateur"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Dernière connexion"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Client",
                "verbose_name_plural": "Clients",
            },
            bases=("user.person", models.Model),
            managers=[
                ("objects", user.models.AccountUserManager()),
            ],
        ),
    ]
